#---
#apiVersion: batch/v1
#kind: Job
#metadata:
#  name: etl-createdb-job
#  namespace: {{ .Values.etl.namespace }}
#  labels:
#    app: {{ .Values.etl.server.name }}
#spec:
#  ttlSecondsAfterFinished: 5
#  template:
#    metadata:
#      labels:
#        app: {{ .Values.etl.server.name }}
#      #annotations:
#      #  sidecar.istio.io/inject: "false"
#    spec:
#      containers:
#      - name: etl-createdb-job
#        image: postgres:11-alpine
#        command:
#          - sh
#          - -c
#          - >
#              while ! pg_isready -U postgres -h $ACCESS_SVC_CONNSTR; do sleep 1; done;
#              echo "${SQLCOMMAND}" | psql --file=- --echo-queries -d "$DBNAME" -h "${ACCESS_SVC_CONNSTR}" \
#                --set ON_ERROR_STOP=1 --set dbname="${DBNAME}";
#              echo "${SQLCOMAND2}"| PGPASSWORD=$ETL_PGSQL_PASSWORD psql -U $ETL_PGSQL_USER -d $ETL_DB_NAME \
#                --file=- --echo-queries -h "${ACCESS_SVC_CONNSTR}";
#        env:
#        - name: DBNAME
#          value: idea4rc
#        - name: ACCESS_SVC_CONNSTR
#          value: postgres-db.datamesh.svc.cluster.local
#        - name: PGPASSWORD
#          valueFrom:
#            secretKeyRef:
#              name: postgres-secret
#              key: POSTGRES_PASSWORD
#        - name: PGUSER
#          valueFrom:
#            secretKeyRef:
#              name: postgres-secret
#              key: POSTGRES_USER
#        - name: ETL_PGSQL_USER
#          valueFrom:
#            secretKeyRef:
#              name: etl-secret
#              key: ETL_PGSQL_USER
#        - name: ETL_PGSQL_PASSWORD
#          valueFrom:
#            secretKeyRef:
#              name: etl-secret
#              key: ETL_PGSQL_PASSWORD
#        - name: ETL_DB_NAME
#          value: {{ .Values.etl.server.db_name}}
#        - name: SQLCOMMAND
#          value: |
#            CREATE USER "{{ .Values.etl.server.etl_pgsql_user }}" WITH PASSWORD '{{ .Values.etl.server.etl_pgsql_password }}';
#            CREATE DATABASE "{{ .Values.etl.server.db_name }}";
#            GRANT ALL PRIVILEGES ON DATABASE "{{ .Values.etl.server.db_name}}" TO "{{ .Values.etl.server.etl_pgsql_user }}";
#            ALTER DATABASE "{{ .Values.etl.server.db_name }}" OWNER TO "{{ .Values.etl.server.etl_pgsql_user }}";
#            \gexec
#        - name: SQLCOMMAND2
#          value: |
#            GRANT ALL ON SCHEMA "public" TO "{{ .Values.etl.server.etl_pgsql_user }}";
#            \gexec
#      restartPolicy: OnFailure
#      #activeDeadlineSeconds: 30
#  backoffLimit: 5